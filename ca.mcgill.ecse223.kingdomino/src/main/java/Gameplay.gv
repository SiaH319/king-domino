// Code generated by Umple 1.29.0.4181.a593105a9

digraph "Gameplay" {
  compound = true;
  size="80,10"

  // Class: Gameplay

    // Top Level StateMachine: gamestatus
    
    // Start states are shown as a black circle
    node [shape = point, fillcolor="black", width=0.2 ];
    start_Gameplay_gamestatus [ tooltip = "Class Gameplay, SM gamestatus, State start" ];
    
        
    // Format for normal states
    node [shape = rectangle, width=1,style=rounded];
    
      // State: SettingUp

      // Dummy notes for transitions to/from internals to boundary
      node [shape = point, width = 0.005];
      dummyNode1_SettingUp_SettingUp [label=""];
      dummyNode2_SettingUp_SettingUp [label=""];
      
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
            Gameplay_gamestatus_SettingUp [label = SettingUp, tooltip = "Class Gameplay, SM gamestatus, State SettingUp"];
      // End State: SettingUp

      // State: Initializing

     subgraph clusterGameplay_gamestatus_Initializing {
      label = "Initializing";
      style = rounded;

      // Bottom Level StateMachine: Initializing
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_Gameplay_Initializing [ tooltip = "Class Gameplay, SM gamestatus, State Initializing.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: SelectingFirstDomino

        Gameplay_gamestatusInitializing_SelectingFirstDomino [label = SelectingFirstDomino, tooltip = "Class Gameplay, SM gamestatus, State Initializing.SelectingFirstDomino&#13;Entry:
   revealNextDraft(); generateInitialPlayerOrder();switchDraft();createNextDraft();"];
        // End State: SelectingFirstDomino

        // State: ProceedingToNextPlayerOrNextTurn

        Gameplay_gamestatusInitializing_ProceedingToNextPlayerOrNextTurn [label = ProceedingToNextPlayerOrNextTurn, tooltip = "Class Gameplay, SM gamestatus, State Initializing.ProceedingToNextPlayerOrNextTurn&#13;Exit:
   switchCurrentPlayer();"];
        // End State: ProceedingToNextPlayerOrNextTurn
      // End Bottom Level StateMachine: Initializing
     }
      // End State: Initializing

      // State: InGame

     subgraph clusterGameplay_gamestatus_InGame {
      label = "InGame";
      style = rounded;

      // Bottom Level StateMachine: InGame
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_Gameplay_InGame [ tooltip = "Class Gameplay, SM gamestatus, State InGame.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: PreplacingDomino

        Gameplay_gamestatusInGame_PreplacingDomino [label = PreplacingDomino, tooltip = "Class Gameplay, SM gamestatus, State InGame.PreplacingDomino"];
        // End State: PreplacingDomino

        // State: SelectingNextDomino

        Gameplay_gamestatusInGame_SelectingNextDomino [label = SelectingNextDomino, tooltip = "Class Gameplay, SM gamestatus, State InGame.SelectingNextDomino"];
        // End State: SelectingNextDomino

        // State: ProceedingToNextPlayerOrNextTurn

        Gameplay_gamestatusInGame_ProceedingToNextPlayerOrNextTurn [label = ProceedingToNextPlayerOrNextTurn, tooltip = "Class Gameplay, SM gamestatus, State InGame.ProceedingToNextPlayerOrNextTurn"];
        // End State: ProceedingToNextPlayerOrNextTurn

        // State: OrderingNextDraft

        Gameplay_gamestatusInGame_OrderingNextDraft [label = OrderingNextDraft, tooltip = "Class Gameplay, SM gamestatus, State InGame.OrderingNextDraft"];
        // End State: OrderingNextDraft

        // State: RevealingNextDraft

        Gameplay_gamestatusInGame_RevealingNextDraft [label = RevealingNextDraft, tooltip = "Class Gameplay, SM gamestatus, State InGame.RevealingNextDraft"];
        // End State: RevealingNextDraft
      // End Bottom Level StateMachine: InGame
     }
      // End State: InGame

      // State: EndofGame

      Gameplay_gamestatus_EndofGame [label = EndofGame, tooltip = "Class Gameplay, SM gamestatus, State EndofGame&#13;Entry:
   calculatePlayerRanking();resolveTieBreak();"];
      // End State: EndofGame
    // End Top Level StateMachine: gamestatus

  // All transitions
    start_Gameplay_gamestatus -> Gameplay_gamestatus_SettingUp [  tooltip = "start to SettingUp" ] ;
    Gameplay_gamestatus_SettingUp -> dummyNode2_SettingUp_SettingUp:e [  dir=none,   label = "createNewUser(String name) / {...}", tooltip = "From SettingUp to SettingUp on createNewUser(String name)&#13;Transition Action:
   createUser(name);" ] ;
    dummyNode2_SettingUp_SettingUp:w -> Gameplay_gamestatus_SettingUp [  tooltip = "From SettingUp to SettingUp on createNewUser(String name)&#13;Transition Action:
   createUser(name);" ] ;
  
  Gameplay_gamestatus_SettingUp -> dummyNode1_SettingUp_SettingUp:e [  dir=none,   label = "loadGame(String filename) [!isLoadedGameValid(filename)] / ", tooltip = "From SettingUp to SettingUp on loadGame(String filename)&#13;Guard:  [!isLoadedGameValid(filename)]&#13;Transition Action:
   " ] ;
    dummyNode1_SettingUp_SettingUp:w -> Gameplay_gamestatus_SettingUp [  tooltip = "From SettingUp to SettingUp on loadGame(String filename)&#13;Guard:  [!isLoadedGameValid(filename)]&#13;Transition Action:
   " ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatus_SettingUp [  ltail=clusterGameplay_gamestatus_InGame,  label = "saveGame / save();", tooltip = "From InGame to SettingUp on saveGame&#13;Transition Action:
   save();" ] ;
  
  Gameplay_gamestatus_EndofGame -> Gameplay_gamestatus_SettingUp [  label = "restart / ", tooltip = "From EndofGame to SettingUp on restart&#13;Transition Action:
   " ] ;
  
  start_Gameplay_Initializing -> Gameplay_gamestatusInitializing_SelectingFirstDomino [  tooltip = "start to Initializing.SelectingFirstDomino" ] ;
    Gameplay_gamestatus_SettingUp -> Gameplay_gamestatusInitializing_SelectingFirstDomino [  label = "startNewGame(int numOfPlayers,boolean mkActivated,boolean harmonyActivated,String [] userNames) / {...}", tooltip = "From SettingUp to Initializing.SelectingFirstDomino on startNewGame(int numOfPlayers,boolean mkActivated,boolean harmonyActivated,String [] userNames)&#13;Transition Action:
   initializeGame(numOfPlayers,userNames);setGameOptions(mkActivated, harmonyActivated);shuffleDominoPile(); createNextDraft(); orderNextDraft();" ] ;
  
  Gameplay_gamestatusInitializing_ProceedingToNextPlayerOrNextTurn -> Gameplay_gamestatusInitializing_SelectingFirstDomino [  label = "proceed [!isCurrentPlayerTheLastInTurn()] / ", tooltip = "From Initializing.ProceedingToNextPlayerOrNextTurn to Initializing.SelectingFirstDomino on proceed&#13;Guard:  [!isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   " ] ;
  
  Gameplay_gamestatusInitializing_SelectingFirstDomino -> Gameplay_gamestatusInitializing_ProceedingToNextPlayerOrNextTurn [  label = "makeSelection(int id) / {...}", tooltip = "From Initializing.SelectingFirstDomino to Initializing.ProceedingToNextPlayerOrNextTurn on makeSelection(int id)&#13;Transition Action:
   currentPlayerSelectDomino(id);" ] ;
  
  Gameplay_gamestatus_SettingUp -> Gameplay_gamestatusInGame_PreplacingDomino [  lhead=clusterGameplay_gamestatus_InGame,  label = "loadGame(String filename) [isLoadedGameValid(filename)] / ", tooltip = "From SettingUp to InGame on loadGame(String filename)&#13;Guard:  [isLoadedGameValid(filename)]&#13;Transition Action:
   " ] ;
  
  start_Gameplay_InGame -> Gameplay_gamestatusInGame_PreplacingDomino [  tooltip = "start to InGame.PreplacingDomino" ] ;
    Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "moveDomino(String dir) / {...}", tooltip = "From InGame.PreplacingDomino to InGame.PreplacingDomino on moveDomino(String dir)&#13;Transition Action:
   moveCurrentDomino(dir);" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "rotateDomino(int dir) / {...}", tooltip = "From InGame.PreplacingDomino to InGame.PreplacingDomino on rotateDomino(int dir)&#13;Transition Action:
   rotateCurrentDomino(dir);" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "place [isCorrectlyPreplaced() && !(isCurrentPlayerTheLastInTurn()) && isCurrentTurnTheLastInGame()] / {...}", tooltip = "From InGame.PreplacingDomino to InGame.PreplacingDomino on place&#13;Guard:  [isCorrectlyPreplaced() && !(isCurrentPlayerTheLastInTurn()) && isCurrentTurnTheLastInGame()]&#13;Transition Action:
   placeDomino();calculateCurrentPlayerScore();switchCurrentPlayer();" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "discard [impossibleToPlaceDomino() && isCurrentTurnTheLastInGame() && !isCurrentPlayerTheLastInTurn()] / {...}", tooltip = "From InGame.PreplacingDomino to InGame.PreplacingDomino on discard&#13;Guard:  [impossibleToPlaceDomino() && isCurrentTurnTheLastInGame() && !isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   discardDomino(); calculateCurrentPlayerScore();switchCurrentPlayer();" ] ;
  
  Gameplay_gamestatusInGame_ProceedingToNextPlayerOrNextTurn -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "proceed [!isCurrentPlayerTheLastInTurn()] / {...}", tooltip = "From InGame.ProceedingToNextPlayerOrNextTurn to InGame.PreplacingDomino on proceed&#13;Guard:  [!isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   switchCurrentPlayer();" ] ;
  
  Gameplay_gamestatusInGame_RevealingNextDraft -> Gameplay_gamestatusInGame_PreplacingDomino [  label = "reveal / {...}", tooltip = "From InGame.RevealingNextDraft to InGame.PreplacingDomino on reveal&#13;Transition Action:
   revealNextDraft();switchCurrentPlayer();" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_SelectingNextDomino [  label = "place [isCorrectlyPreplaced() && !isCurrentTurnTheLastInGame()] / {...}", tooltip = "From InGame.PreplacingDomino to InGame.SelectingNextDomino on place&#13;Guard:  [isCorrectlyPreplaced() && !isCurrentTurnTheLastInGame()]&#13;Transition Action:
   placeDomino(); calculateCurrentPlayerScore();" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatusInGame_SelectingNextDomino [  label = "discard [impossibleToPlaceDomino() && !isCurrentTurnTheLastInGame()] / {...}", tooltip = "From InGame.PreplacingDomino to InGame.SelectingNextDomino on discard&#13;Guard:  [impossibleToPlaceDomino() && !isCurrentTurnTheLastInGame()]&#13;Transition Action:
   discardDomino(); calculateCurrentPlayerScore();" ] ;
  
  Gameplay_gamestatusInGame_SelectingNextDomino -> Gameplay_gamestatusInGame_ProceedingToNextPlayerOrNextTurn [  label = "makeSelection(int id) / {...}", tooltip = "From InGame.SelectingNextDomino to InGame.ProceedingToNextPlayerOrNextTurn on makeSelection(int id)&#13;Transition Action:
   currentPlayerSelectDomino(id);" ] ;
  
  Gameplay_gamestatusInitializing_ProceedingToNextPlayerOrNextTurn -> Gameplay_gamestatusInGame_OrderingNextDraft [  label = "proceed [isCurrentPlayerTheLastInTurn()] / ", tooltip = "From Initializing.ProceedingToNextPlayerOrNextTurn to InGame.OrderingNextDraft on proceed&#13;Guard:  [isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   " ] ;
  
  Gameplay_gamestatusInGame_ProceedingToNextPlayerOrNextTurn -> Gameplay_gamestatusInGame_OrderingNextDraft [  label = "proceed [isCurrentPlayerTheLastInTurn()] / switchDraft();", tooltip = "From InGame.ProceedingToNextPlayerOrNextTurn to InGame.OrderingNextDraft on proceed&#13;Guard:  [isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   switchDraft();" ] ;
  
  Gameplay_gamestatusInGame_OrderingNextDraft -> Gameplay_gamestatusInGame_RevealingNextDraft [  label = "order [areAllDominoesInCurrentDraftSelected()] / {...}", tooltip = "From InGame.OrderingNextDraft to InGame.RevealingNextDraft on order&#13;Guard:  [areAllDominoesInCurrentDraftSelected()]&#13;Transition Action:
   orderNextDraft();" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatus_EndofGame [  label = "place [isCorrectlyPreplaced() && isCurrentPlayerTheLastInTurn() && isCurrentTurnTheLastInGame()] / {...}", tooltip = "From InGame.PreplacingDomino to EndofGame on place&#13;Guard:  [isCorrectlyPreplaced() && isCurrentPlayerTheLastInTurn() && isCurrentTurnTheLastInGame()]&#13;Transition Action:
   placeDomino();calculateCurrentPlayerScore();" ] ;
  
  Gameplay_gamestatusInGame_PreplacingDomino -> Gameplay_gamestatus_EndofGame [  label = "discard [impossibleToPlaceDomino() && isCurrentTurnTheLastInGame() && isCurrentPlayerTheLastInTurn()] / {...}", tooltip = "From InGame.PreplacingDomino to EndofGame on discard&#13;Guard:  [impossibleToPlaceDomino() && isCurrentTurnTheLastInGame() && isCurrentPlayerTheLastInTurn()]&#13;Transition Action:
   discardDomino(); calculateCurrentPlayerScore();" ] ;
  

}
